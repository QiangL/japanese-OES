<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<!-- 扫描com.baobaotao.dao包下所有标注@Repository的DAO组件 -->
	<context:component-scan base-package="org.ssdut.japanese.oes.dao.impl" />
	<context:property-placeholder
		location="classpath:/org/ssdut/japanese/profile/jdbc.properties" />
	<!-- 数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.url}" p:username="${jdbc.username}" p:password="${jdbc.password}" />

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="org.ssdut.japanese.oes.entity"> <!-- 扫描所有PO类 -->
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>

				<prop key="hibernate.format_sql">true </prop>
				<!-- //“useUnicode”和“characterEncoding”决定了它是否在客户端和服务器端传输过程中进行Encode，以及如何进行Encode -->
				<prop key="hibernate.connection.useUnicode">true </prop>
				<!-- //允许查询缓存, 个别查询仍然需要被设置为可缓存的. -->
				<prop key="hibernate.cache.use_query_cache">false </prop>
				<prop key="hibernate.default_batch_fetch_size">16 </prop>
				<!-- //连接池的最大活动个数 -->
				<prop key="hibernate.dbcp.maxActive">100 </prop>
				<!-- //当连接池中的连接已经被耗尽的时候，DBCP将怎样处理(0 = 失败,1 = 等待,2 = 增长) -->
				<prop key="hibernate.dbcp.whenExhaustedAction">1 </prop>
				<!-- //最大等待时间 -->
				<prop key="hibernate.dbcp.maxWait">1200 </prop>
				<!-- //没有人用连接的时候，最大闲置的连接个数 -->
				<prop key="hibernate.dbcp.maxIdle">10 </prop>
				<!-- ##以下是对prepared statement的处理，同上 -->
				<prop key="hibernate.dbcp.ps.maxActive">100 </prop>
				<prop key="hibernate.dbcp.ps.whenExhaustedAction">1 </prop>
				<prop key="hibernate.dbcp.ps.maxWait">1200 </prop>
				<prop key="hibernate.dbcp.ps.maxIdle">10 </prop>
			</props>
		</property>
	</bean>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate"
		p:sessionFactory-ref="sessionFactory" />
</beans>